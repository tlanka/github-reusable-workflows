# action.yml
name: 'Custom Github Action to Update Deployment YAML files'

on:
  workflow_call:
    inputs:
      image_tag:
        description: Image tag of the docker image
        required: true
        type: string
        default: 'latest'
      git_user:
        description: username to access github repo
        required: true
        type: string
      app_name:
        description: App name to be update
        required: true
        type: string
      environment:
        description: Environment to be update
        required: true
        type: string
      jenkins_user:
        description: Jenkins user
        required: true
        type: string
        
    secrets:
      git_password:
        required: true
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true
      jenkins_password:
        required: true  
        
jobs:
  build-and-push-docker-image:
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0      

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}

      - name: Build image and push to DockerHub
        id: docker_build_push
        uses: docker/build-push-action@v2
        with:
           # relative path to the place where source code with Dockerfile is located
          context: .
          push: true
           # Note: tags has to be all lower-case
          tags: pics/${{inputs.app_name}}:${{inputs.image_tag}}

        
      - name: Run list and prettier and elm-format
        run: |
          npm install
          npm run coverage
          npm prune --production   


      - name: Trigger your-awesome-job-name job
        run: |
          curl https://jenkins.avettatech.com/job/${{inputs.environment}}-deploy-generic/buildWithParameters \
             --user avettajenkins:${{secrets.jenkins_password}} \
             --data ContainerName=${{inputs.app_name}} --data DockerHubTag=${{inputs.image_tag}}
